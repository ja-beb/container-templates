upstream cdn_server {
    server cdn;
}

upstream site_server {
    server site;
}

add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";

# Redirect all non-HTTPS requests.
server {
    listen 80 default_server;
    listen [::]:80;
    server_name server_domain_or_IP;
  	return 301 https://$host$request_uri;
}

# Default server route - to site container
server {
    server_name    _;
    
    listen 443 http2 ssl;
    listen [::]:443 http2 ssl;

    # enable gzip compression
    gzip             on;
    gzip_static      on;
    gzip_min_length  1000;
    gzip_types       text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    etag on;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
    add_header Cache-Control "private, proxy-revalidate;max-age=0";

    access_log /var/log/nginx/proxy-access.log;
    error_log  /var/log/nginx/proxy-error.log;

    include /etc/nginx/conf.d/self-signed.conf;
    include /etc/nginx/conf.d/ssl-params.conf;

    location / {
        proxy_pass http://site_server;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }    
}

# CDN route - to cdn container
server {
    server_name    cdn.localhost;

    listen 443 http2 ssl;
    listen [::]:443 http2 ssl;

    # enable gzip compression
    gzip             on;
    gzip_static      on;
    gzip_min_length  1000;
    gzip_types       text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    etag on;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
    add_header Cache-Control "private, proxy-revalidate;max-age=0";

    access_log /var/log/nginx/proxy-access.log;
    error_log  /var/log/nginx/proxy-error.log;

    location / {
        proxy_pass http://cdn_server;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }
}   
